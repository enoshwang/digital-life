cmake_minimum_required(VERSION 3.22)
message("start cmake")

if (WIN32)
	message("it is windows")
elseif (UNIX)
	message("it is UNIX-like OS's")
else ()
	message("it is Other OS (not windows|UNIX-like)")
endif ()

project(ewcommon LANGUAGES CXX)

message("set output dir(must set in root CMakeLists.txt)")
# 设置静态库的输出目录
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/dist/lib)
# 设置动态库的输出目录
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/dist/lib)
# 设置可执行文件的输出目录(windows dll 与 exe 都为 runtime)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/dist/bin)

# cmake
include(${CMAKE_SOURCE_DIR}/../cmake/base.cmake)

# include
include_directories(${CMAKE_SOURCE_DIR}/include)

# 设置 Object Libraries for cmake，防止源文件编译多次
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src LIBEMYLIB_SRC)
add_library(${PROJECT_NAME}_objlib OBJECT ${LIBEMYLIB_SRC})
# 开启 PIC
set_target_properties(${PROJECT_NAME}_objlib PROPERTIES POSITION_INDEPENDENT_CODE True)

# 构建动态库
add_library(${PROJECT_NAME}_shared SHARED $<TARGET_OBJECTS:${PROJECT_NAME}_objlib>)
set_target_properties(${PROJECT_NAME}_shared PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME}_shared PROPERTIES VERSION 1.0 SOVERSION 1)

# 构建静态库
add_library(${PROJECT_NAME}_static STATIC $<TARGET_OBJECTS:${PROJECT_NAME}_objlib>)
set_target_properties(${PROJECT_NAME}_static PROPERTIES OUTPUT_NAME ${PROJECT_NAME})

# 构建测试程序
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/test TEST_SRC)
add_executable(${PROJECT_NAME}_test ${TEST_SRC} $<TARGET_OBJECTS:${PROJECT_NAME}_objlib>)
set_target_properties(${PROJECT_NAME}_test PROPERTIES OUTPUT_NAME ${PROJECT_NAME})

message("end cmake")